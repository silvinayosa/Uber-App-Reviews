# -*- coding: utf-8 -*-
"""10890525_DataVisualization_Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BGcSbCM1c85CuD9jCvxGYckHC4_JSnoa
"""

import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.decomposition import LatentDirichletAllocation
from sklearn.manifold import MDS
import matplotlib.pyplot as plt

# Load the dataset
data = pd.read_csv('uber_reviews_without_reviewid.csv')

import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud

# 1. Word Cloud
plt.figure(figsize=(10, 6))
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(' '.join(data['content']))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title("Word Cloud of Review Content", fontsize=16)
plt.show()

# 2. Histogram of Scores
plt.figure(figsize=(8, 6))
sns.histplot(data['score'], bins=5, kde=True, color='skyblue')  # Add kde=True for trendline
plt.title("Distribution of Review Scores", fontsize=16)
plt.xlabel("Score")
plt.ylabel("Frequency")
plt.show()

# 3. Scatter Plot: Score vs ThumbsUpCount
plt.figure(figsize=(8, 6))
sns.scatterplot(x='score', y='thumbsUpCount', data=data, alpha=0.6, color='purple')
plt.title("Scatter Plot of Scores vs Thumbs-Up Count", fontsize=16)
plt.xlabel("Score")
plt.ylabel("Thumbs-Up Count")
plt.show()

# 4. Violin Plot: Score vs AppVersion (Filtered)
# Group less frequent app versions into "Other"
top_versions = data['appVersion'].value_counts().nlargest(10).index
data['appVersion_filtered'] = data['appVersion'].apply(lambda x: x if x in top_versions else 'Other')

plt.figure(figsize=(12, 6))
sns.violinplot(x='appVersion_filtered', y='score', data=data.dropna(subset=['appVersion']), palette='muted')
plt.xticks(rotation=90)
plt.title("Distribution of Scores Across App Versions (Filtered)", fontsize=16)
plt.xlabel("App Version")
plt.ylabel("Score")
plt.show()


# 5. Heatmap: Correlation Between Variables
correlation_data = data[['score', 'thumbsUpCount']].copy()
correlation_data['appVersion'] = data['appVersion'].astype('category').cat.codes  # Encode appVersion as numbers
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_data.corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title("Heatmap of Correlations", fontsize=16)
plt.show()